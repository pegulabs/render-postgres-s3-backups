envVarGroups:
  - name: database-backups-east
    envVars:
      # pick the region closest to your database
      # For example, us-west-2 for the Oregon region
      - key: AWS_REGION
        value: us-east-1
      # A globally unique name for your bucket
      # For example, <your-username>-<database name>-render-postgres-backups
      - key: S3_BUCKET_NAME
        value: alumnifire-database-backups
  - name: database-backups-west
    envVars:
      # pick the region closest to your database
      # For example, us-west-2 for the Oregon region
      - key: AWS_REGION
        value: us-west-2
      # A globally unique name for your bucket
      # For example, <your-username>-<database name>-render-postgres-backups
      - key: S3_BUCKET_NAME
        value: alumnifire-database-backups-backup
  - name: database-backups
    envVars:
      # Looks like "AKIAXXXXXXXXXXXXXXXX"
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      # Postgres version of your Postgres instance
      # For example, 16
      - key: POSTGRES_VERSION
        value: 16
      # Alpine base-OS version, see README
      # For example, 3.20
      - key: ALPINE_VERSION
        sync: false
        value: 3.20

services:
  - name: alumnifire-production-postgres-backup-to-s3
    type: cron
    schedule: "0 3 * * *"
    region: ohio
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    autoDeploy: false
    envVars:
      - fromGroup: database-backups
      - fromGroup: database-backups-east
      - key: DATABASE_URL
        fromDatabase:
          name: alumnifire-production-postgres
          property: connectionString
      - key: S3_PATH
        value: alumnifire-production-postgres-backups
  - name: alumnifire-production-postgres-backup-to-s3-secondary
    type: cron
    schedule: "0 3 * * *"
    region: ohio
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    autoDeploy: false
    envVars:
      - fromGroup: database-backups
      - fromGroup: database-backups-west
      - key: DATABASE_URL
        fromDatabase:
          name: alumnifire-production-postgres
          property: connectionString
      - key: S3_PATH
        value: alumnifire-production-postgres-backups
  - name: controlroom-production-postgres-backup-to-s3
    type: cron
    schedule: "0 3 * * *"
    region: ohio
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    autoDeploy: false
    envVars:
      - fromGroup: database-backups
      - fromGroup: database-backups-east
      - key: DATABASE_URL
        fromDatabase:
          name: controlroom-production-postgres
          property: connectionString
      - key: S3_PATH
        value: controlroom-production-postgres-backups
  - name: controlroom-production-postgres-backup-to-s3-secondary
    type: cron
    schedule: "0 3 * * *"
    region: ohio
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    autoDeploy: false
    envVars:
      - fromGroup: database-backups
      - fromGroup: database-backups-west
      - key: DATABASE_URL
        fromDatabase:
          name: controlroom-production-postgres
          property: connectionString
      - key: S3_PATH
        value: controlroom-production-postgres-backups
